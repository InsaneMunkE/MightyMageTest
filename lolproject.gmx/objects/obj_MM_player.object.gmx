<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>6</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>vsp = 0;
hsp = 0;
grav = 1.8;
grounded = 0;
djump = 0;
jump = 0;
run = 0;
run_end = 0;
casting = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (run_end) = 0
{
    run = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//mighty mage convergence

//get our inputs
key_left    =   keyboard_check_direct(vk_left);
key_right   =   keyboard_check_direct(vk_right);
key_jump    =   keyboard_check_pressed(vk_up);
key_casting =   keyboard_check_direct(vk_space);
released_left = keyboard_check_released(vk_left);
released_right = keyboard_check_released(vk_right);

//casting = 0 hsp movement
//move left and right
if (key_casting)
{
    hsp = 0;
    casting = 1;
    jump = 3;
    if (key_left)
    {
        image_xscale = -1;
    }
    
    if (key_right)
    {
        image_xscale = 1;
    }
    if sign(vsp) == 1
    {
    grav = 0.2;
    }
}
else
if (!key_casting)
{
    casting = 0;
    grav = 1.8;
    if (key_left)
    {
        hsp = -12;
        image_xscale = -1;
        run_end = 0;
        if (run) = 2
        {
            hsp = -24;
            run_end = 1;
        }
    }
    if (released_left)
    {
        run = 2;
        alarm[0] = 3;
        if (run_end)
        {
            run = 0;
        }
    }    
    if (key_right)
    {
        hsp = 12;
        image_xscale = 1;
        run_end = 0;
        if (run) = 3
        {
            hsp = 24;
            run_end = 1;
        }
    }
    if (released_right)
    {
        run = 3;
        alarm[0] = 5;
        if (run_end)
        {
            run = 0;
        }
    }
}

//neutral input = 0 movement
if ((key_right &amp;&amp; key_left) or (!key_right &amp;&amp; !key_left))
{
    hsp = 0;
    run_end = 0;
}

//jumping
if (key_jump)
{
    if (jump) = 1
    {
        vsp = -20;
        jump = 2;
    }
    else
    {
        if (jump) = 2
        {
            vsp = -16;
            jump = 3;
        }
    }
}

vsp+= grav;

//horizontal collision
var hcollide;
hcollide = instance_place(x+hsp,y,par_wall);
if (hcollide !=noone)
{
    if ((hcollide).type == 1)
    {
        if place_meeting(x+hsp,y,par_wall)
        {
            yplus = 0;
            while (place_meeting(x+hsp,y-yplus,par_wall) &amp;&amp; yplus &lt;= abs(1*hsp)) yplus += 1;
            if place_meeting(x+hsp,y-yplus,par_wall)
            {
                while (!place_meeting(x+sign(hsp),y,par_wall)) x+=sign(hsp);
                hsp = 0;
            }
            else
            {
                y -= yplus;
            }
        }
    }
}
x += hsp;

//vertical collision
var vcollide;
vcollide = instance_place(x,y+vsp,par_wall);
if (vcollide != noone)
{   
    if ((vcollide).type == 1)
    {
        if place_meeting(x,y+vsp,par_wall)
        {
            while (!place_meeting(x,y+sign(vsp),par_wall)) y+=sign(vsp);
            if (sign(vsp) == 1 ) 
            {
                grounded = 1;
                jump = 1;           
            }
            vsp = 0;
        }
         if place_free(x,y+1) &amp;&amp; !place_free(x,y+8)
            {
                move_contact_solid(270,sign(vsp));
            }
    }
    if (((vcollide).type == 2) &amp;&amp; sign(vsp) == 1)
    {
        if (!place_meeting(x,y,par_wall))
        {
            while (!place_meeting(x,y+sign(vsp),par_wall)) y+=1;
            vsp=0;
            grounded = 1;
            jump = 1;
        }
    }
}
else
{
    grounded = 0;
}
y += vsp;





</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>MM_obj</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (casting)
{
    if (sprite_index!=spr_MMC_strip3) image_index = 0;
    sprite_index=spr_MMC_strip3;
    image_speed = 0.4;
}
else
{
if (grounded)
{
    if (hsp==0)
    {
    sprite_index = spr_MM_strip3;
    image_speed = 0.3
    }
    else
    {
        if (run_end) 
        {
            if (sprite_index!=spr_MMD_strip2) image_index = 0;
            sprite_index=spr_MMD_strip2; 
            image_speed=0.4
        }
        else
        {
            if (sprite_index!=spr_MMW_strip3) image_index  = 0;
            sprite_index=spr_MMW_strip3;
            image_speed = 0.4;
        }
    }
}
else
{
if (jump)&gt;1
{
    if (vsp&lt;0)
    {
    sprite_index=spr_MMJ_strip2
    }
    else
    {
    sprite_index=spr_MMF_strip2
    }
}
}
}

    
    

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_fire">
      <action>
        <libid>1</libid>
        <id>721</id>
        <kind>0</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_set_health</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>-1</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>-5</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="82">
      <action>
        <libid>1</libid>
        <id>331</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_restart_game</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
    <event eventtype="9" enumb="69">
      <action>
        <libid>1</libid>
        <id>332</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_end_game</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,0</point>
    <point>76,76</point>
  </PhysicsShapePoints>
</object>
